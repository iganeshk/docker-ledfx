name: Build LedFx Image

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - Dockerfile
  #     - .github/workflows/build.yaml
  # workflow_call:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Environment
        id: get-ledfx-version
        run: |
          echo "LEDFX_VERSION=$(curl -Ls https://pypi.org/pypi/ledfx/json | jq -r .info.version)" >> $GITHUB_ENV
          echo "build_date=$( date -u +'%Y-%m-%dT%H:%M:%SZ' )" >> $GITHUB_ENV

      - name: 'Log in to the Github Container registry'
        uses: 'docker/login-action@v3'
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Set up Docker Buildx'
        uses: 'docker/setup-buildx-action@v3'

      - name: 'Build & Publish Docker Image'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          outputs: type=image
          platforms: linux/amd64
          build-args: |
              LEDFX_VERSION=${{ env.LEDFX_VERSION }}
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.created=${{ env.build_date }}
            org.opencontainers.image.description=LedFx Docker v(${{ env.LEDFX_VERSION }})
            org.opencontainers.image.licenses=GPL-3.0
            org.opencontainers.image.source=https://github/${{ github.repository }}
            org.opencontainers.image.title=AdWireGuard
            org.opencontainers.image.url=https://github/${{ github.repository }}
            org.opencontainers.image.version=${{ env.LEDFX_VERSION }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.LEDFX_VERSION }}
            ghcr.io/${{ github.repository }}:latest
